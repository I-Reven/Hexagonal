version: '3'

services:

  netdata:
    image: netdata/netdata
    container_name: 'hex-netdata'
    ports:
      - 19999:19999
    depends_on:
      - redis
      - rabbitmq
      - mongodb
      - influxdb
      - core
      - grafana
      - telegraf
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - backend

  grafana:
    image: koushamad/hexagonal-grafana:latest
    build: ./docker/grafana
    container_name: 'hex-grafana'
    volumes:
      - ./docker/grafana/data/grafana:/var/lib/grafana
    ports:
      - 3000:3000
    links:
      - redis
      - rabbitmq
      - mongodb
      - influxdb
      - elassandra
    depends_on:
      - redis
      - rabbitmq
      - mongodb
      - influxdb
      - elassandra
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: ${GF_AUTH_ANONYMOUS_ENABLED}
      GF_AUTH_ANONYMOUS_ORG_ROLE: ${GF_AUTH_ANONYMOUS_ORG_ROLE}
      INFLUXDB_URI: ${INFLUXDB_URI}
      INFLUXDB_DB: ${INFLUXDB_DB}
      INFLUXDB_USER: ${INFLUXDB_USER}
      INFLUXDB_USER_PASSWORD: ${INFLUXDB_USER_PASSWORD}
    networks:
      - backend

  mongodb:
    image: mongo:3.6.18
    container_name: 'hex-mongodb'
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ./docker/mongo/data:/data
      - ./docker/mongo/log:/var/log/mongodb
    networks:
      - backend

  elassandra:
    image: erangaeb/elassandra:6.2
    container_name: 'hex-elassandra'
    environment:
      - CASSANDRA_BROADCAST_ADDRESS=host.docker.internal
      - CASSANDRA_SEEDS=host.docker.internal
    volumes:
      - ./docker/cassandra/log:/var/log/cassandra
      - ./docker/elassandra/data:/opt/elassandra/data
    ports:
      - 7000:7000
      - 7001:7001
      - 7199:7199
      - 9042:9042
      - 9160:9160
      - 9200:9200
      - 9300:9300
    networks:
      - backend

  elasticsearch:
    image: elastichq/elasticsearch-hq
    container_name: 'hex-elasticsearch'
    restart: unless-stopped
    ports:
      - 5000:5000
    links:
      - elassandra
    depends_on:
      - elassandra
    networks:
      - backend

  redis:
    image: redis
    container_name: 'hex-redis'
    restart: unless-stopped
    volumes:
      - ./docker/redis/data:/data
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.7.5-management
    container_name: 'hex-rabbitmq'
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./docker/rabbitmq/log:/var/log/rabbitmq
      - ./docker/rabbitmq/schema:/var/lib/rabbitmq/schema
      - ./docker/rabbitmq/config:/var/lib/rabbitmq/config
      - ./docker/rabbitmq/mnesia:/var/lib/rabbitmq/mnesia
      - ./docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - backend

  influxdb:
    image: influxdb:1.7.10
    container_name: 'hex-influxdb'
    ports:
      - 8083:8083
      - 8086:8086
      - 8090:8090
    volumes:
      - ./docker/influxdb/data:/var/lib/influxdb
      - ./docker/influxdb/log:/var/log/influxdb
    environment:
      INFLUXDB_REPORTING_DISABLED: ${INFLUXDB_REPORTING_DISABLED}
      INFLUXDB_DB: ${INFLUXDB_DB}
      INFLUXDB_USER: ${INFLUXDB_USER}
      INFLUXDB_USER_PASSWORD: ${INFLUXDB_USER_PASSWORD}
    networks:
      - backend

  chronograf:
    image: chronograf:0.12
    container_name: 'hex-chronograf'
    volumes:
      - ./docker/chronograf/data:/var/lib/chronograf
    links:
      - influxdb
    depends_on:
      - influxdb
    ports:
      - 10000:10000
    networks:
      - backend

  kapacitor:
    image: kapacitor:0.12
    container_name: 'hex-kapacitor'
    environment:
      KAPACITOR_HOSTNAME: kapacitor
      KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
    volumes:
      - ./docker/kapacitor/data:/var/lib/kapacitor
    links:
      - influxdb
    depends_on:
      - influxdb
    ports:
      - 9092:9092
    networks:
      - backend

  telegraf:
    image: library/telegraf:1.14.3
    container_name: 'hex-telegraf'
    volumes:
      - ./docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - redis
      - rabbitmq
      - mongodb
      - influxdb
      - grafana
      - elassandra
      - core
    depends_on:
      - redis
      - rabbitmq
      - mongodb
      - influxdb
      - grafana
      - elassandra
      - core
    ports:
      - 8092:8092/udp
      - 8094:8094
      - 8125:8125/udp
    environment:
      INFLUXDB_URI: ${INFLUXDB_URI}
      MONGO_HOST: ${MONGO_HOST}:${MONGO_PORT}
    networks:
      - backend

  socketio-client-tool:
    image: amritb/socketio-client-tool:latest
    container_name: 'hex-socket-client'
    ports:
      - 8002:8080
    networks:
      - backend

  core:
    image: koushamad/hexagonal-core:latest
    build:
      context: .
      args:
        PKG: core
    container_name: 'hex-core'
    restart: unless-stopped
    ports:
      - 8080:80
      - 8081:81
    depends_on:
      - redis
      - rabbitmq
      - mongodb
      - elassandra
    volumes:
      - ./docker/application/log:/var/log/hex
    environment:
      PKG: core
      APP_ENV: ${APP_ENV}
      MONGO_URL: ${MONGO_HOST}
      REDIS_URL: ${REDIS_HOST}:${REDIS_PORT}
      RABBIT_URL: amqp://${RABBIT_USER}:${RABBIT_PASSWORD}@${RABBIT_HOST}:5672/
    networks:
      - backend

networks:
  backend:
    external: true