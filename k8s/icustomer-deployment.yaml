apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-deploy.yaml --out ./k8s
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: icustomer
  name: icustomer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: icustomer
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-deploy.yaml --out ./k8s
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/backend: "true"
        io.kompose.service: icustomer
    spec:
      containers:
      - env:
        - name: APP_ENV
          value: production
        - name: MONGO_URL
          value: mongodb
        - name: PKG
          value: core
        - name: RABBIT_URL
          value: amqp://kousha:kousha@rabbitmq:5672/
        - name: REDIS_URL
          value: redis:6379
        image: koushamad/hexagonal-icustomer:latest
        imagePullPolicy: ""
        name: hex-icustomer
        ports:
        - containerPort: 80
        - containerPort: 81
        - containerPort: 82
        resources: {}
        volumeMounts:
        - mountPath: /var/log/hex
          name: icustomer-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: icustomer-claim0
        persistentVolumeClaim:
          claimName: icustomer-claim0
status: {}
